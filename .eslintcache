[{"C:\\Users\\rox\\Documents\\React-todo-list\\src\\App.js":"1","C:\\Users\\rox\\Documents\\React-todo-list\\src\\modals\\EditTask.js":"2","C:\\Users\\rox\\Documents\\React-todo-list\\src\\modals\\CreateTask.js":"3","C:\\Users\\rox\\Documents\\React-todo-list\\src\\index.js":"4","C:\\Users\\rox\\Documents\\React-todo-list\\src\\components\\Card.js":"5","C:\\Users\\rox\\Documents\\React-todo-list\\src\\reportWebVitals.js":"6","C:\\Users\\rox\\Documents\\React-todo-list\\src\\modals\\NextModal.js":"7","C:\\Users\\rox\\Documents\\React-todo-list\\src\\components\\TodoList.js":"8"},{"size":317,"mtime":1653844492447,"results":"9","hashOfConfig":"10"},{"size":1900,"mtime":1653844492449,"results":"11","hashOfConfig":"12"},{"size":2513,"mtime":1655396044751,"results":"13","hashOfConfig":"12"},{"size":517,"mtime":1653844492448,"results":"14","hashOfConfig":"12"},{"size":1974,"mtime":1653844492447,"results":"15","hashOfConfig":"12"},{"size":375,"mtime":1653844492450,"results":"16","hashOfConfig":"12"},{"size":1881,"mtime":1655394987912,"results":"17","hashOfConfig":"12"},{"size":1868,"mtime":1655396054294,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tvl49x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"3h7iew",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rox\\Documents\\React-todo-list\\src\\App.js",["36"],"C:\\Users\\rox\\Documents\\React-todo-list\\src\\modals\\EditTask.js",["37"],"import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    },[])\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Name'] = taskName\r\n        tempObj['Description'] = description\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Task Name</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTaskPopup;","C:\\Users\\rox\\Documents\\React-todo-list\\src\\modals\\CreateTask.js",["38"],"C:\\Users\\rox\\Documents\\React-todo-list\\src\\index.js",[],"C:\\Users\\rox\\Documents\\React-todo-list\\src\\components\\Card.js",[],"C:\\Users\\rox\\Documents\\React-todo-list\\src\\reportWebVitals.js",[],"C:\\Users\\rox\\Documents\\React-todo-list\\src\\modals\\NextModal.js",[],"C:\\Users\\rox\\Documents\\React-todo-list\\src\\components\\TodoList.js",[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":24,"column":7,"nodeType":"45","endLine":24,"endColumn":9,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"47","line":30,"column":11,"nodeType":"41","messageId":"42","endLine":30,"endColumn":21},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["48"],"'handleSave' is assigned a value but never used.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"51","text":"52"},[651,653],"[taskObj.Description, taskObj.Name]"]